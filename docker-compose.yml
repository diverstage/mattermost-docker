version: "3"

services:

  db:
    image: mysql
    container_name: mm_db
    read_only: true
    restart: unless-stopped
    volumes:
      - ./volumes/db/data:/var/lib/mysql
      - ./volumes/db/settings:/etc/mysql/conf.d
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=M4NvzMUPN9vz
      - MYSQL_USER=diverstage
      - MYSQL_PASSWORD=pxQCT42KhMDK
      - MYSQL_DATABASE=mattermost
    networks:
      - app-net

  app:
    build:
      context: app
      # uncomment following lines for team edition or change UID/GID
      args:
        - edition=team
      #   - PUID=1000
      #   - PGID=1000
    restart: unless-stopped
    volumes:
      - ./volumes/app/mattermost/config:/mattermost/config:rw
      - ./volumes/app/mattermost/data:/mattermost/data:rw
      - ./volumes/app/mattermost/logs:/mattermost/logs:rw
      - ./volumes/app/mattermost/plugins:/mattermost/plugins:rw
      - ./volumes/app/mattermost/client-plugins:/mattermost/client/plugins:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_PORT_NUMBER=3306
      - MM_SQLSETTINGS_DRIVERNAME=mysql
      - MM_SQLSETTINGS_DATASOURCE=diverstage:pxQCT42KhMDK@tcp(db:3306)/mattermost?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s
      - VIRTUAL_HOST=chat.diverstage.biz
      - LETSENCRYPT_HOST=chat.diverstage.biz
      - LETSENCRYPT_EMAIL=diverstage@gmail.com
    networks:
      - app-net

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - vhost:/etc/nginx/vhost.d
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - app-net

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-lets-encrypt
    restart: always
    depends_on:
      - "nginx-proxy"
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-net

volumes:
  certs:
  html:
  vhost:
  dhparam:

networks:
  app-net:
    driver: bridge